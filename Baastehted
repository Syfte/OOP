package application;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Scanner;

import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;

public class Baastehted extends Peaklass2{
	
		Scene liitmine;
		Scanner sisend= new Scanner(System.in);
		
		int read;
		int veerud;
		
		
		public int getRead() {
			return read;
		}

		public void setRead(int read) {
			this.read = read;
		}

		public int getVeerud() {
			return veerud;
		}

		public void setVeerud(int veerud) {
			this.veerud = veerud;
		}

		
		public int[][] loeVastus(int r_arv, int v_arv){
			int[][] vastus=new int[r_arv][v_arv];
			try {
				ObjectInputStream sisse=new ObjectInputStream(
							new FileInputStream("vastus.txt"));
				
				vastus= (int[][]) sisse.readObject();
				sisse.close();
				
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return vastus; 
		}
		
		public void salvestaVastus(int[][] maatriks){
			
			try {
				ObjectOutputStream valja=new ObjectOutputStream(
							new FileOutputStream("vastus.txt"));
				valja.writeObject(maatriks);
				valja.close();
				
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	           
		}
		public BorderPane mootmeteTagastus() {
			BorderPane l_piir=new BorderPane();
			Label read= new Label("Sisestage maatriksite ridade arv");
			TextField  tekst = new TextField ();
			Label veerud= new Label("Sisestage maatriksite veergude arv");
			TextField  tekst2 = new TextField ();
			HBox hb = new HBox();
			HBox hb3 = new HBox();
			HBox hb2 = new HBox();
			VBox vb =new VBox();
			Button ok=new Button("Ok");
			Button oki=new Button("Oki");
			hb.getChildren().addAll(read, tekst, ok);
			hb2.getChildren().addAll(veerud, tekst2, oki);
			vb.getChildren().addAll(hb,hb2, hb3);
			hb.setSpacing(10);
			hb2.setSpacing(10);
			vb.setSpacing(10);
			l_piir.setTop(vb);
			//l_piir.setLeft(hb3);
			
			ok.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {
			    public void handle(MouseEvent me){
			    	
			    	int ridadeArv=Integer.parseInt(tekst.getText());
			    	int veergudeArv=Integer.parseInt(tekst2.getText());
			    	setRead(ridadeArv);
			    	setVeerud(veergudeArv);
			    	
				   GridPane gp1 = new GridPane();
				    for ( int a = 0 ; a < ridadeArv ; a++ ){
				    	
				    	for (int i=3; i< 3+veergudeArv; i++ ){
							for (int j=9; j< 9+ridadeArv; j++){
								TextField tb1= new TextField();
								tb1.setPrefSize(30, 30);
								gp1.setPadding(new Insets(8,8,8,8));
								gp1.add(tb1, i,j);	
							}
						}
				    	Label l1=new Label("	");
				    	gp1.add(l1, 3+veergudeArv, 9);
				    	for (int i=7; (veergudeArv+i)< (7+(2*veergudeArv)); i++ ){
							for (int j=9; j< 9+ridadeArv; j++){
								TextField tb2= new TextField();
								tb2.setPrefSize(30, 30);
								gp1.setPadding(new Insets(8,8,8,8));
								gp1.add(tb2, veergudeArv+i,j);	
							}
						}
				    	Label l2=new Label("	= ");
				         gp1.add(l2, 10+2*veergudeArv, 10);
				         l_piir.setCenter(gp1);
				         //System.out.println(gp1.getChildren());
				    }
				    //teksti saamine
				    oki.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {
					    public void handle(MouseEvent me){
					    	int muutuja=0;
					    	int[][] esimeneMaatiks= new int[ridadeArv][veergudeArv];
					    	int[][] teineMaatiks= new int[ridadeArv][veergudeArv];
					    	for(Object el:gp1.getChildren()){
					    		//el.getClass()
					    		
					    		if(el.getClass().getName().equals("javafx.scene.control.TextField")){
					 
					    			TextField uus=(TextField)el;
					    			
					    			if(uus.getText().isEmpty()==false){
					    					System.out.println(uus.getText());
					    				int arv=Integer.parseInt(uus.getText());
					    				muutuja++;
					    				if (muutuja <= ridadeArv* veergudeArv){
					    					int koht=(muutuja % veergudeArv)-1; //veerg
					    					int koht2= ((int) Math.ceil(muutuja / veergudeArv))-1;
					    					esimeneMaatiks[koht][koht2]=arv;
					    				}
					    				
					    				
					    				else if (muutuja > ridadeArv*veergudeArv){
					    					int koht=(muutuja % veergudeArv)-1; //veerg
					    					int koht2= ((int) Math.ceil(muutuja / veergudeArv))-1;
					    					System.out.println(koht+"df "+koht2);
					    					teineMaatiks[koht][koht2]=arv;
					    					System.out.println("läbi");
					    			//uus.getText();
					    			}}
					    		}	
						    }
					    	for(int i=0; i<esimeneMaatiks.length;i++)
				    			for(int j=0; j<esimeneMaatiks.length;j++)
				    				System.out.println(esimeneMaatiks[i][j]);
					    	for(int g=0; g<teineMaatiks.length;g++)
				    			for(int h=0; h<teineMaatiks.length;h++)
				    				System.out.println(teineMaatiks[g][h]);
					    	
					    }
				    });
				    
				  
				    
			    }
			    	
			    
			});
			AnchorPane ankur1 = new AnchorPane(); //salvesta vastus ankur
			Button salvesta= new Button("Salvesta vastus");
			ankur1.getChildren().add(salvesta);   
		    AnchorPane.setBottomAnchor(salvesta, 8.0);
		    AnchorPane.setRightAnchor(salvesta, 5.0);
		    l_piir.setBottom(ankur1);
		    
		    
			return l_piir;
			
		}
		
		public void juhuslikMaatriks(){ //juhusliku maatriksii genereeerimine , prindib maatriksi
			System.out.println("Palun sisestada maatriksi ridade arv: ");
			int uueridadeArv= sisend.nextInt();
			//int uueveergudeArv= sisend.nextInt();
			System.out.println("Palun sisestada maatriksi väikseim arv ning suurim arv: ");
			int vaikseimArv= sisend.nextInt();
			int suurimArv= sisend.nextInt();
			JuhuslikMaatriks e = new JuhuslikMaatriks(uueridadeArv,uueridadeArv, vaikseimArv, suurimArv);
			
			int [] [] mat=e.maatriks();
			for (int i=0; i< uueridadeArv; i++){
				System.out.println();
				for (int j=0; j < uueridadeArv; j++){
					System.out.print(mat[i][j]+ "\t");
					
				}
			}
			
		}
		
		public Scene liitmine(){ //liitmine, tagastab maatriksi
			
			
			
			liitmine= new Scene(mootmeteTagastus(), 600,600);
			
			return liitmine;
			//aken.setScene(liitmine);
			/*System.out.println("Palun sisestada maatriksi ridade arv ning veergude arv: ");
			int ridadeArv= sisend.nextInt();
			int veergudeArv= sisend.nextInt();
			
			int esimeneMaatriks[][] = new int[ridadeArv][veergudeArv];
		    int teineMaatriks[][] = new int[ridadeArv][veergudeArv];
		    int uusMaatriks[][] = new int[ridadeArv][veergudeArv];
		    
		    System.out.println("Sisesta esimene maatriks: ");
			 
		      for ( int a = 0 ; a < ridadeArv ; a++ )
		         for (int b = 0 ; b < veergudeArv ; b++ )
		            esimeneMaatriks[a][b] = sisend.nextInt();
		   
		      
		    System.out.println("Sisesta teine maatriks: ");
				 
		      for ( int a = 0 ; a < ridadeArv ; a++ )
		         for (int b = 0 ; b < veergudeArv ; b++ )
		            teineMaatriks[a][b] = sisend.nextInt();  

			
			for (int c = 0 ; c < ridadeArv ; c++ )
		         for (int d = 0 ; d < veergudeArv ; d++ )
		             uusMaatriks[c][d] = esimeneMaatriks[c][d] + teineMaatriks[c][d];
			return uusMaatriks;*/
		}
		
		public int[][] lahutamine(){ //lahutamine, tagastab maatriksi
			System.out.println("Palun sisestada maatriksi ridade arv ning veergude arv: ");
			int ridadeArv= sisend.nextInt();
			int veergudeArv= sisend.nextInt();
			
			int esimeneMaatriks[][] = new int[ridadeArv][veergudeArv];
		    int teineMaatriks[][] = new int[ridadeArv][veergudeArv];
		    int uusMaatriks[][] = new int[ridadeArv][veergudeArv];
		    
		    System.out.println("Sisesta esimene maatriks: ");
			 
		      for ( int a = 0 ; a < ridadeArv ; a++ )
		         for (int b = 0 ; b < veergudeArv ; b++ )
		            esimeneMaatriks[a][b] = sisend.nextInt();
		   
		      
		    System.out.println("Sisesta teine maatriks: ");
				 
		      for ( int a = 0 ; a < ridadeArv ; a++ )
		         for (int b = 0 ; b < veergudeArv ; b++ )
		            teineMaatriks[a][b] = sisend.nextInt();
		     
		      for (int c = 0 ; c < ridadeArv ; c++ )
			         for (int d = 0 ; d < veergudeArv ; d++ )
			             uusMaatriks[c][d] = esimeneMaatriks[c][d] - teineMaatriks[c][d];
		      return uusMaatriks;
			
		}
		
		public int[][] arvuga_korrutamine(){ //arvuga korrutamine
			System.out.println("Palun sisestada maatriksi ridade arv ning veergude arv: ");
			int ridadeArv= sisend.nextInt();
			int veergudeArv= sisend.nextInt();
			
			int esimeneMaatriks[][] = new int[ridadeArv][veergudeArv];
			int uusMaatriks[][] = new int[ridadeArv][veergudeArv];
			
			System.out.println("Sisesta maatriks: ");
			 
		      for ( int a = 0 ; a < ridadeArv ; a++ )
		         for (int b = 0 ; b < veergudeArv ; b++ )
		            esimeneMaatriks[a][b] = sisend.nextInt();
		      
			System.out.println("Mis arvuga soovite korrutada?");
			int korrutusarv= sisend.nextInt();
	    	for (int c = 0 ; c < ridadeArv ; c++ ) 
		         for (int d = 0 ; d < veergudeArv ; d++ )
		             uusMaatriks[c][d] = esimeneMaatriks[c][d] *korrutusarv;// korda see arv
	    	
	    	return uusMaatriks;
		}
		public int[][] korrutamine(){
		System.out.println("Palun sisestada maatriksi ridade arv ning veergude arv: ");
		int ridadeArv= sisend.nextInt();
		int veergudeArv= sisend.nextInt();
		
		int esimeneMaatriks[][] = new int[ridadeArv][veergudeArv];
	    int teineMaatriks[][] = new int[ridadeArv][veergudeArv];
	    int uusMaatriks[][] = new int[ridadeArv][veergudeArv];
	    
	    System.out.println("Sisesta esimene maatriks: ");
		 
	      for ( int a = 0 ; a < ridadeArv ; a++ )
	         for (int b = 0 ; b < veergudeArv ; b++ )
	            esimeneMaatriks[a][b] = sisend.nextInt();
	   
	      
	    System.out.println("Sisesta teine maatriks: ");
			 
	      for ( int a = 0 ; a < ridadeArv ; a++ )
	         for (int b = 0 ; b < veergudeArv ; b++ )
	            teineMaatriks[a][b] = sisend.nextInt();
	      
	      for (int c = 0 ; c < ridadeArv ; c++ ) {
		         for (int d = 0 ; d < veergudeArv ; d++ )
		        	 for (int k = 0 ; k < veergudeArv ; k++ )
		             uusMaatriks[c][d] += esimeneMaatriks[c][k]* teineMaatriks[k][d];
	      }
	      return uusMaatriks;
	      
		}

	

}
